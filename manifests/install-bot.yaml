apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-notifications-bot
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-notifications-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-notifications-bot
rules:
- apiGroups:
  - ""
  resourceNames:
  - argocd-notifications-secret
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-notifications-controller
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-notifications-bot
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-notifications-bot
subjects:
- kind: ServiceAccount
  name: argocd-notifications-bot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-notifications-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-notifications-controller
subjects:
- kind: ServiceAccount
  name: argocd-notifications-controller
---
apiVersion: v1
data:
  template.app-health-degraded: |
    body: |
      {{if eq .context.notificationType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.
      Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
    name: app-health-degraded
    slack:
      attachments: |-
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
          "color": "#f4c030",
          "fields": [
          {
            "title": "Sync Status",
            "value": "{{.app.status.sync.status}}",
            "short": true
          },
          {
            "title": "Repository",
            "value": "{{.app.spec.source.repoURL}}",
            "short": true
          }
          {{range $index, $c := .app.status.conditions}}
          {{if not $index}},{{end}}
          {{if $index}},{{end}}
          {
            "title": "{{$c.type}}",
            "value": "{{$c.message}}",
            "short": true
          }
          {{end}}
          ]
        }]
    title: Application {{.app.metadata.name}} has degraded.
  template.app-sync-failed: |
    body: |
      {{if eq .context.notificationType "slack"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
      Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
    name: app-sync-failed
    slack:
      attachments: "[{\n  \"title\": \"{{ .app.metadata.name}}\",\n  \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n
        \ \"color\": \"#E96D76\",\n  \"fields\": [\n  {\n    \"title\": \"Sync Status\",\n
        \   \"value\": \"{{.app.status.sync.status}}\",\n    \"short\": true\n  },\n  {\n
        \   \"title\": \"Repository\",\n    \"value\": \"{{.app.spec.source.repoURL}}\",\n
        \   \"short\": true\n  }\n  {{range $index, $c := .app.status.conditions}}\n  {{if
        not $index}},{{end}}\n  {{if $index}},{{end}}\n  {\n    \"title\": \"{{$c.type}}\",\n
        \   \"value\": \"{{$c.message}}\",\n    \"short\": true\n  }\n  {{end}}\n  ]\n}]
        \   "
    title: Failed to sync application {{.app.metadata.name}}.
  template.app-sync-running: |
    body: |
      The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
      Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
    name: app-sync-running
    slack:
      attachments: |-
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
          "color": "#0DADEA",
          "fields": [
          {
            "title": "Sync Status",
            "value": "{{.app.status.sync.status}}",
            "short": true
          },
          {
            "title": "Repository",
            "value": "{{.app.spec.source.repoURL}}",
            "short": true
          }
          {{range $index, $c := .app.status.conditions}}
          {{if not $index}},{{end}}
          {{if $index}},{{end}}
          {
            "title": "{{$c.type}}",
            "value": "{{$c.message}}",
            "short": true
          }
          {{end}}
          ]
        }]
    title: Start syncing application {{.app.metadata.name}}.
  template.app-sync-status-unknown: |
    body: |
      {{if eq .context.notificationType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.
      Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
      {{if ne .context.notificationType "slack"}}
      {{range $c := .app.status.conditions}}
          * {{$c.message}}
      {{end}}
      {{end}}
    name: app-sync-status-unknown
    slack:
      attachments: |-
        [{
          "title": "{{ .app.metadata.name}}",
          "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
          "color": "#E96D76",
          "fields": [
          {
            "title": "Sync Status",
            "value": "{{.app.status.sync.status}}",
            "short": true
          },
          {
            "title": "Repository",
            "value": "{{.app.spec.source.repoURL}}",
            "short": true
          }
          {{range $index, $c := .app.status.conditions}}
          {{if not $index}},{{end}}
          {{if $index}},{{end}}
          {
            "title": "{{$c.type}}",
            "value": "{{$c.message}}",
            "short": true
          }
          {{end}}
          ]
        }]
    title: Application {{.app.metadata.name}} sync status is 'Unknown'
  template.app-sync-succeeded: |
    body: |
      {{if eq .context.notificationType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
      Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
    name: app-sync-succeeded
    slack:
      attachments: "[{\n  \"title\": \"{{ .app.metadata.name}}\",\n  \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n
        \ \"color\": \"#18be52\",\n  \"fields\": [\n  {\n    \"title\": \"Sync Status\",\n
        \   \"value\": \"{{.app.status.sync.status}}\",\n    \"short\": true\n  },\n  {\n
        \   \"title\": \"Repository\",\n    \"value\": \"{{.app.spec.source.repoURL}}\",\n
        \   \"short\": true\n  }\n  {{range $index, $c := .app.status.conditions}}\n  {{if
        not $index}},{{end}}\n  {{if $index}},{{end}}\n  {\n    \"title\": \"{{$c.type}}\",\n
        \   \"value\": \"{{$c.message}}\",\n    \"short\": true\n  }\n  {{end}}\n  ]\n}]
        \   "
    title: Application {{.app.metadata.name}} has been successfully synced.
  trigger.on-health-degraded: |
    condition: app.status.health.status == 'Degraded'
    description: Application has degraded
    enabled: false
    name: on-health-degraded
    template: app-health-degraded
  trigger.on-sync-failed: |
    condition: app.status.operationState.phase in ['Error', 'Failed']
    description: Application syncing has failed
    enabled: false
    name: on-sync-failed
    template: app-sync-failed
  trigger.on-sync-running: |
    condition: app.status.operationState.phase in ['Running']
    description: Application is being synced
    enabled: false
    name: on-sync-running
    template: app-sync-running
  trigger.on-sync-status-unknown: |
    condition: app.status.sync.status == 'Unknown'
    description: Application status is 'Unknown'
    enabled: false
    name: on-sync-status-unknown
    template: app-sync-status-unknown
  trigger.on-sync-succeeded: |
    condition: app.status.operationState.phase in ['Succeeded']
    description: Application syncing has succeeded
    enabled: false
    name: on-sync-succeeded
    template: app-sync-succeeded
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: argocd-notifications-cm
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-notifications-secret
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-notifications-bot
spec:
  ports:
  - name: server
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-notifications-bot
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: argocd-notifications-controller-metrics
  name: argocd-notifications-controller-metrics
spec:
  ports:
  - name: metrics
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app.kubernetes.io/name: argocd-notifications-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-notifications-bot
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-bot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-notifications-bot
    spec:
      containers:
      - command:
        - /app/argocd-notifications
        - bot
        image: argoprojlabs/argocd-notifications:latest
        imagePullPolicy: Always
        name: argocd-notifications-bot
        workingDir: /app
      serviceAccountName: argocd-notifications-bot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-notifications-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-notifications-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-notifications-controller
    spec:
      containers:
      - command:
        - /app/argocd-notifications
        - controller
        image: argoprojlabs/argocd-notifications:latest
        imagePullPolicy: Always
        name: argocd-notifications-controller
        volumeMounts:
        - mountPath: /app/config/tls
          name: tls-certs
        workingDir: /app
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argocd-notifications-controller
      volumes:
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
